{"version":3,"names":["React","memo","useContext","useMemo","RefreshControl","Gesture","GestureDetector","Animated","useAnimatedProps","BottomSheetDraggableContext","SCROLLABLE_STATE","useBottomSheetInternal","AnimatedRefreshControl","createAnimatedComponent","BottomSheetRefreshControlComponent","onRefresh","scrollableGesture","rest","draggableGesture","animatedScrollableState","animatedProps","enabled","value","UNLOCKED","gesture","Simultaneous","Native","shouldCancelWhenOutside","BottomSheetRefreshControl","displayName"],"sources":["BottomSheetRefreshControl.android.tsx"],"sourcesContent":["import React, { memo, useContext, useMemo } from 'react';\nimport { RefreshControl, RefreshControlProps } from 'react-native';\nimport {\n  Gesture,\n  GestureDetector,\n  SimultaneousGesture,\n} from 'react-native-gesture-handler';\nimport Animated, { useAnimatedProps } from 'react-native-reanimated';\nimport { BottomSheetDraggableContext } from '../../contexts/gesture';\nimport { SCROLLABLE_STATE } from '../../constants';\nimport { useBottomSheetInternal } from '../../hooks';\n\nconst AnimatedRefreshControl = Animated.createAnimatedComponent(RefreshControl);\n\ninterface BottomSheetRefreshControlProps extends RefreshControlProps {\n  scrollableGesture: SimultaneousGesture;\n}\n\nfunction BottomSheetRefreshControlComponent({\n  onRefresh,\n  scrollableGesture,\n  ...rest\n}: BottomSheetRefreshControlProps) {\n  //#region hooks\n  const draggableGesture = useContext(BottomSheetDraggableContext);\n  const { animatedScrollableState } = useBottomSheetInternal();\n  //#endregion\n\n  //#region variables\n  const animatedProps = useAnimatedProps(() => ({\n    enabled: animatedScrollableState.value === SCROLLABLE_STATE.UNLOCKED,\n  }));\n  const gesture = useMemo(\n    () =>\n      Gesture.Simultaneous(\n        Gesture.Native().shouldCancelWhenOutside(false),\n        scrollableGesture,\n        draggableGesture!\n      ),\n    [draggableGesture, scrollableGesture]\n  );\n  //#endregion\n\n  // render\n  return (\n    <GestureDetector gesture={gesture}>\n      <AnimatedRefreshControl\n        {...rest}\n        onRefresh={onRefresh}\n        animatedProps={animatedProps}\n      />\n    </GestureDetector>\n  );\n}\n\nconst BottomSheetRefreshControl = memo(BottomSheetRefreshControlComponent);\nBottomSheetRefreshControl.displayName = 'BottomSheetRefreshControl';\n\nexport default BottomSheetRefreshControl;\n"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,IAAhB,EAAsBC,UAAtB,EAAkCC,OAAlC,QAAiD,OAAjD;AACA,SAASC,cAAT,QAAoD,cAApD;AACA,SACEC,OADF,EAEEC,eAFF,QAIO,8BAJP;AAKA,OAAOC,QAAP,IAAmBC,gBAAnB,QAA2C,yBAA3C;AACA,SAASC,2BAAT,QAA4C,wBAA5C;AACA,SAASC,gBAAT,QAAiC,iBAAjC;AACA,SAASC,sBAAT,QAAuC,aAAvC;AAEA,MAAMC,sBAAsB,GAAGL,QAAQ,CAACM,uBAAT,CAAiCT,cAAjC,CAA/B;;AAMA,SAASU,kCAAT,OAImC;EAAA,IAJS;IAC1CC,SAD0C;IAE1CC,iBAF0C;IAG1C,GAAGC;EAHuC,CAIT;EACjC;EACA,MAAMC,gBAAgB,GAAGhB,UAAU,CAACO,2BAAD,CAAnC;EACA,MAAM;IAAEU;EAAF,IAA8BR,sBAAsB,EAA1D,CAHiC,CAIjC;EAEA;;EACA,MAAMS,aAAa,GAAGZ,gBAAgB,CAAC,OAAO;IAC5Ca,OAAO,EAAEF,uBAAuB,CAACG,KAAxB,KAAkCZ,gBAAgB,CAACa;EADhB,CAAP,CAAD,CAAtC;EAGA,MAAMC,OAAO,GAAGrB,OAAO,CACrB,MACEE,OAAO,CAACoB,YAAR,CACEpB,OAAO,CAACqB,MAAR,GAAiBC,uBAAjB,CAAyC,KAAzC,CADF,EAEEX,iBAFF,EAGEE,gBAHF,CAFmB,EAOrB,CAACA,gBAAD,EAAmBF,iBAAnB,CAPqB,CAAvB,CAViC,CAmBjC;EAEA;;EACA,oBACE,oBAAC,eAAD;IAAiB,OAAO,EAAEQ;EAA1B,gBACE,oBAAC,sBAAD,eACMP,IADN;IAEE,SAAS,EAAEF,SAFb;IAGE,aAAa,EAAEK;EAHjB,GADF,CADF;AASD;;AAED,MAAMQ,yBAAyB,gBAAG3B,IAAI,CAACa,kCAAD,CAAtC;AACAc,yBAAyB,CAACC,WAA1B,GAAwC,2BAAxC;AAEA,eAAeD,yBAAf"}