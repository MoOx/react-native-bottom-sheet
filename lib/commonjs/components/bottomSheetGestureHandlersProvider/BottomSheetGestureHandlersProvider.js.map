{"version":3,"names":["BottomSheetGestureHandlersProvider","gestureEventsHandlersHook","useGestureEventsHandlers","useGestureEventsHandlersDefault","children","animatedGestureSource","useSharedValue","GESTURE_SOURCE","UNDETERMINED","animatedContentGestureState","animatedHandleGestureState","useBottomSheetInternal","handleOnStart","handleOnChange","handleOnEnd","handleOnFinalize","contentPanGestureHandler","useGestureHandler","CONTENT","handlePanGestureHandler","HANDLE","contextValue","useMemo"],"sources":["BottomSheetGestureHandlersProvider.tsx"],"sourcesContent":["import React, { useMemo } from 'react';\nimport { GESTURE_SOURCE } from '../../constants';\nimport {\n  useGestureHandler,\n  useBottomSheetInternal,\n  useGestureEventsHandlersDefault,\n} from '../../hooks';\nimport { BottomSheetGestureHandlersContext } from '../../contexts';\nimport type { BottomSheetGestureHandlersProviderProps } from './types';\nimport { useSharedValue } from 'react-native-reanimated';\n\nconst BottomSheetGestureHandlersProvider = ({\n  gestureEventsHandlersHook:\n    useGestureEventsHandlers = useGestureEventsHandlersDefault,\n  children,\n}: BottomSheetGestureHandlersProviderProps) => {\n  //#region variables\n  const animatedGestureSource = useSharedValue<GESTURE_SOURCE>(\n    GESTURE_SOURCE.UNDETERMINED\n  );\n  //#endregion\n\n  //#region hooks\n  const { animatedContentGestureState, animatedHandleGestureState } =\n    useBottomSheetInternal();\n  const { handleOnStart, handleOnChange, handleOnEnd, handleOnFinalize } =\n    useGestureEventsHandlers();\n  //#endregion\n\n  //#region gestures\n  const contentPanGestureHandler = useGestureHandler(\n    GESTURE_SOURCE.CONTENT,\n    animatedContentGestureState,\n    animatedGestureSource,\n    handleOnStart,\n    handleOnChange,\n    handleOnEnd,\n    handleOnFinalize\n  );\n\n  const handlePanGestureHandler = useGestureHandler(\n    GESTURE_SOURCE.HANDLE,\n    animatedHandleGestureState,\n    animatedGestureSource,\n    handleOnStart,\n    handleOnChange,\n    handleOnEnd,\n    handleOnFinalize\n  );\n  //#endregion\n\n  //#region context\n  const contextValue = useMemo(\n    () => ({\n      contentPanGestureHandler,\n      handlePanGestureHandler,\n      animatedGestureSource,\n    }),\n    [contentPanGestureHandler, handlePanGestureHandler, animatedGestureSource]\n  );\n  //#endregion\n  return (\n    <BottomSheetGestureHandlersContext.Provider value={contextValue}>\n      {children}\n    </BottomSheetGestureHandlersContext.Provider>\n  );\n};\n\nexport default BottomSheetGestureHandlersProvider;\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAKA;;AAEA;;;;;;AAEA,MAAMA,kCAAkC,GAAG,QAII;EAAA,IAJH;IAC1CC,yBAAyB,EACvBC,wBAAwB,GAAGC,sCAFa;IAG1CC;EAH0C,CAIG;EAC7C;EACA,MAAMC,qBAAqB,GAAG,IAAAC,qCAAA,EAC5BC,yBAAA,CAAeC,YADa,CAA9B,CAF6C,CAK7C;EAEA;;EACA,MAAM;IAAEC,2BAAF;IAA+BC;EAA/B,IACJ,IAAAC,6BAAA,GADF;EAEA,MAAM;IAAEC,aAAF;IAAiBC,cAAjB;IAAiCC,WAAjC;IAA8CC;EAA9C,IACJb,wBAAwB,EAD1B,CAV6C,CAY7C;EAEA;;EACA,MAAMc,wBAAwB,GAAG,IAAAC,wBAAA,EAC/BV,yBAAA,CAAeW,OADgB,EAE/BT,2BAF+B,EAG/BJ,qBAH+B,EAI/BO,aAJ+B,EAK/BC,cAL+B,EAM/BC,WAN+B,EAO/BC,gBAP+B,CAAjC;EAUA,MAAMI,uBAAuB,GAAG,IAAAF,wBAAA,EAC9BV,yBAAA,CAAea,MADe,EAE9BV,0BAF8B,EAG9BL,qBAH8B,EAI9BO,aAJ8B,EAK9BC,cAL8B,EAM9BC,WAN8B,EAO9BC,gBAP8B,CAAhC,CAzB6C,CAkC7C;EAEA;;EACA,MAAMM,YAAY,GAAG,IAAAC,cAAA,EACnB,OAAO;IACLN,wBADK;IAELG,uBAFK;IAGLd;EAHK,CAAP,CADmB,EAMnB,CAACW,wBAAD,EAA2BG,uBAA3B,EAAoDd,qBAApD,CANmB,CAArB,CArC6C,CA6C7C;;EACA,oBACE,6BAAC,2CAAD,CAAmC,QAAnC;IAA4C,KAAK,EAAEgB;EAAnD,GACGjB,QADH,CADF;AAKD,CAvDD;;eAyDeJ,kC"}