{"version":3,"names":["useBottomSheetDynamicSnapPoints","initialSnapPoints","animatedContentHeight","useSharedValue","animatedHandleHeight","INITIAL_HANDLE_HEIGHT","animatedSnapPoints","useDerivedValue","value","map","INITIAL_SNAP_POINT","contentWithHandleHeight","snapPoint","handleContentLayout","useCallback","nativeEvent","layout","height"],"sources":["useBottomSheetDynamicSnapPoints.ts"],"sourcesContent":["import { useCallback } from 'react';\nimport { useDerivedValue, useSharedValue } from 'react-native-reanimated';\nimport {\n  INITIAL_HANDLE_HEIGHT,\n  INITIAL_SNAP_POINT,\n} from '../components/bottomSheet/constants';\n\n/**\n * Provides dynamic content height calculating functionalities, by\n * replacing the placeholder `CONTENT_HEIGHT` with calculated layout.\n * @example\n * [0, 'CONTENT_HEIGHT', '100%']\n * @param initialSnapPoints your snap point with content height placeholder.\n * @returns {\n *  - animatedSnapPoints: an animated snap points to be set on `BottomSheet` or `BottomSheetModal`.\n *  - animatedHandleHeight: an animated handle height callback node to be set on `BottomSheet` or `BottomSheetModal`.\n *  - animatedContentHeight: an animated content height callback node to be set on `BottomSheet` or `BottomSheetModal`.\n *  - handleContentLayout: a `onLayout` callback method to be set on `BottomSheetView` component.\n * }\n */\nexport const useBottomSheetDynamicSnapPoints = (\n  initialSnapPoints: Array<string | number>\n) => {\n  // variables\n  const animatedContentHeight = useSharedValue(0);\n  const animatedHandleHeight = useSharedValue(INITIAL_HANDLE_HEIGHT);\n  const animatedSnapPoints = useDerivedValue(() => {\n    if (\n      animatedHandleHeight.value === INITIAL_HANDLE_HEIGHT ||\n      animatedContentHeight.value === 0\n    ) {\n      return initialSnapPoints.map(() => INITIAL_SNAP_POINT);\n    }\n    const contentWithHandleHeight =\n      animatedContentHeight.value + animatedHandleHeight.value;\n\n    return initialSnapPoints.map(snapPoint =>\n      snapPoint === 'CONTENT_HEIGHT' ? contentWithHandleHeight : snapPoint\n    );\n  }, []);\n\n  // callbacks\n  const handleContentLayout = useCallback(\n    ({\n      nativeEvent: {\n        layout: { height },\n      },\n    }) => {\n      animatedContentHeight.value = height;\n    },\n    [animatedContentHeight]\n  );\n\n  return {\n    animatedSnapPoints,\n    animatedHandleHeight,\n    animatedContentHeight,\n    handleContentLayout,\n  };\n};\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAKA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,+BAA+B,GAC1CC,iBAD6C,IAE1C;EACH;EACA,MAAMC,qBAAqB,GAAG,IAAAC,qCAAA,EAAe,CAAf,CAA9B;EACA,MAAMC,oBAAoB,GAAG,IAAAD,qCAAA,EAAeE,gCAAf,CAA7B;EACA,MAAMC,kBAAkB,GAAG,IAAAC,sCAAA,EAAgB,MAAM;IAC/C,IACEH,oBAAoB,CAACI,KAArB,KAA+BH,gCAA/B,IACAH,qBAAqB,CAACM,KAAtB,KAAgC,CAFlC,EAGE;MACA,OAAOP,iBAAiB,CAACQ,GAAlB,CAAsB,MAAMC,6BAA5B,CAAP;IACD;;IACD,MAAMC,uBAAuB,GAC3BT,qBAAqB,CAACM,KAAtB,GAA8BJ,oBAAoB,CAACI,KADrD;IAGA,OAAOP,iBAAiB,CAACQ,GAAlB,CAAsBG,SAAS,IACpCA,SAAS,KAAK,gBAAd,GAAiCD,uBAAjC,GAA2DC,SADtD,CAAP;EAGD,CAb0B,EAaxB,EAbwB,CAA3B,CAJG,CAmBH;;EACA,MAAMC,mBAAmB,GAAG,IAAAC,kBAAA,EAC1B,QAIM;IAAA,IAJL;MACCC,WAAW,EAAE;QACXC,MAAM,EAAE;UAAEC;QAAF;MADG;IADd,CAIK;IACJf,qBAAqB,CAACM,KAAtB,GAA8BS,MAA9B;EACD,CAPyB,EAQ1B,CAACf,qBAAD,CAR0B,CAA5B;EAWA,OAAO;IACLI,kBADK;IAELF,oBAFK;IAGLF,qBAHK;IAILW;EAJK,CAAP;AAMD,CAvCM"}